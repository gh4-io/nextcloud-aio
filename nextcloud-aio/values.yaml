## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  ## global time zone setting e.g. "UTC"
  ##
  tz: America/New_York

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #           - key: app.env/nextcloud
  #             operator: In
  #             values:
  #               - 'true'


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
## @param appsAllowed
##
appsAllowed: ""
## @param additionalTrushProxy
##
additionalTrustedProxy: ""
## @param additionalAPKS
##
additionalAPKS: imagemagick
## @param additionalPHPExtensions  This allows to add additional php extensions to the Nextcloud container permanently. Default is imagick but can be overwritten by modifying this value.
##
additionalPHPExtensions: imagemagick
## @param updateAppsOnStartup  When setting to 'true' it will automatically update all installed Nextcloud apps upon container startup on saturdays.
##
updateAppsOnStartup: "false"
## @param removeDisabledApps  keeps Nextcloud apps that are disabled via their switch and not uninstall them if they should be installed in Nextcloud.
##
removeDisabledApps: "false"
## @param startupApps  Allows to modify the Nextcloud apps that are installed on starting AIO the first time
##
startupApps: "deck twofactor_totp tasks calendar contacts notes" 


web:
  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-apache
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
    existingClaim: ""
    storageClass: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  containerPorts: 
    http: 80
    https: 443
    
  service:
    enabled: true
    type: ClusterIP
    ports: 
      http: 80
      https: 443
    annotations: {}
    extraPorts: []
  ## @param mxSize  This needs to be an integer and in sync with NEXTCLOUD_UPLOAD_LIMIT
  ##
  maxSize: "10737418240"

  ingress: {}

nextcloud:

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-nextcloud
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  persistence:
    enabled: true
    size: 5Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    selector: {}
    dataSource: {}
    existingClaim: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  certs:
    trustedCAcertDir: ""
    persistence:
      enabled: true
      size: 1Gi
      accessModes:
        - ReadWriteOnce
      labels: {}
      annotations: {}
      selector: {}
      dataSource: {}
      existingClaim: ""


  phpLimits:
    memory: 512M
    upload: 10G
    time: 3600

  domain: nextcloud.home

  token: ""

  auth:
    existingSecret: ""
    user: admin
    password: superSecretPassword!

  enableMajor: true

  subscriptionKey: ""

  containerPorts:
    http: 9000
    https: 9001

  service:
    enabled: true
    type: ClusterIP
    ports:
      http: 9000
      https: 9001
    annotations: {}
    extraPorts: []

  mail:
    domain: ""
    sender: admin@nextcloud.home
    stmp:
      host: ""
      secure: ""
      port: ""
      authType: ""
      name: ""
      password: ""

  dataStorage:
    persistence:
      enabled: true
      size: 5Gi
      accessModes:
      - ReadWriteOnce
      labels: {}
      existingClaim: ""

    persistentVolumeClaimRetentionPolicy:
      enabled: false
      whenScaled: Retain
      whenDeleted: Retain

db:

  enabled: true

  replicaCount: 3

  image:
    registry: docker.io
    repository: nextcloud/aio-postgresql
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  auth:
    password: superSecretPassword!
    user: nextcloud
    database: nextcloud_database
    existingSecret: ""
    secretKeys:
      userPasswordKey: ""

  service:
    enabled: true
    type: ClusterIP
    ports: 
      postgres: 5432
    annotations: {}
    extraPorts: []

  nameOverride: ""

  fullnameOverride: ""

  containerPorts: 
    postgres: 5432

  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    selector: {}
    dataSource: {}
    existingClaim: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  dumpStorage:

    persistence:
      enabled: true
      size: 1Gi
      accessModes:
        - ReadWriteOnce
      existingClaim: ""
      storageClass: ""

    persistentVolumeClaimRetentionPolicy:
      enabled: false
      whenScaled: Retain
      whenDeleted: Retain

clamav:

  enabled: true
  
  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-clamav
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    selector: {}
    dataSource: {}
    existingClaim: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  nameOverride: ""

  fullnameOverride: ""

  containerPorts:
    clamav: 3310

  service:
    enabled: true
    type: ClusterIP
    ports:
      clamav: 3310
    annotations: {}
    extraPorts: []

collabora:

  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-collabora
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  nameOverride: ""

  fullnameOverride: ""

  dictionaries: de_DE en_GB en_US es_ES fr_FR it nl pt_BR pt_PT ru

  extraParams:
    seccomp: "true"

  containerPorts:
    collabora: 9980

  service:
    enabled: true
    type: ClusterIP
    ports:
      collabora: 9980
    annotations: {}
    extraPorts: []

onlyOffice: 

  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-onlyoffice
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    selector: {}
    dataSource: {}
    existingClaim: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  auth:
    password: ""

  containerPorts:
    http: 80

  service:
    enabled: true
    type: ClusterIP
    ports:
      http: 80
    annotations: {}
    extraPorts: []

redis:

  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-redis
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    annotations: {}
    selector: {}
    dataSource: {}
    existingClaim: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain

  auth: 
    password: ""

  containerPorts: 
    redis: 6379

  service:
    enabled: true
    type: ClusterIP
    ports: 
      redis: 6379
    annotations: {}
    extraPorts: []

talk: 
  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-talk
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  auth: 
    internal: ""
    recording: ""
    signaling: ""
    turn: ""

  podLabels: {}

  podAnnotations: {}

  containerPorts:
    talk: 3478
    http: 8081

  service:
    enabled: true
    type: ClusterIP
    ports: 
      talk: 3478
    annotations: {}
    extraPorts: []

  recording:

    enabled: true

    replicaCount: 1

    image:
      registry: docker.io
      repository: nextcloud/aio-talk-recording
      tag: 20231220_153200-latest
      digest: ""
      pullPolicy: IfNotPresent
      pullSecrets: []

    podLabels: {}

    podAnnotations: {}

    containerPorts: 
      recorder: 1234

    service:
      enabled: true
      type: ClusterIP
      ports:
        recorder: 1234
      annotations: {}
      extraPorts: []

    fullnameOverride: ""

    nameOverride: ""

imaginary: 

  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-imaginary
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  containerPorts:
    http: 9000

  service:
    enabled: true
    type: ClusterIP
    ports:
      http: 9000
    annotations: {}
    extraPorts: []

fullTextSearch:

  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-fulltextsearch
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  auth: 
    password: ""

  containerPorts:
    fullTextSearch: 9200

  service:
    enabled: true
    type: ClusterIP
    ports:
      fullTextSearch: 9200
    annotations: {}
    extraPorts: []

notifyPush:

  enabled: true

  replicaCount: 1

  image:
    registry: docker.io
    repository: nextcloud/aio-notify-push
    tag: 20231220_153200-latest
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  podLabels: {}

  podAnnotations: {}

  containerPorts:
    notify: 7867

  service:
    enabled: true
    type: ClusterIP
    ports:
      notify: 7867
    annotations: {}
    extraPorts: []

elasticSearch: 

  enabled: true
  persistence:
    enabled: true
    size: 1Gi
    labels: {}
    existingClaim: ""

  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain


